const http = require("http");
const querystring = require("querystring");
const discord = require("discord.js");
require("discord-reply");//ÂøÖ„Åö„Åì„ÅÆ‰ΩçÁΩÆ„Å´ËøΩÂä†
const client = new discord.Client();

http
  .createServer(function(req, res) {
    if (req.method == "POST") {
      var data = "";
      req.on("data", function(chunk) {
        data += chunk;
      });
      req.on("end", function() {
        if (!data) {
          res.end("No post data");
          return;
        }
        var dataObject = querystring.parse(data);
        console.log("post:" + dataObject.type);
        if (dataObject.type == "wake") {
          console.log("Woke up in post");
          res.end();
          return;
        }
        res.end();
      });
    } else if (req.method == "GET") {
      res.writeHead(200, { "Content-Type": "text/plain" });
      res.end("Discord Bot is active now\n");
    }
  })
  .listen(3000);

client.on("ready", message => {
  console.log("BotÊ∫ñÂÇôÂÆå‰∫ÜÔΩû");
  client.user.setPresence({ activity: { name: "Áõ£Ë¶ñ‰∏≠" }, status: "online" });
});

client.on("message", message => {
  const prefix = "!";
  
  if (message.author.id == client.user.id) {
    return;
  }
  // gvgÂá∫Ê¨†Á¢∫Ë™ç„Å´„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„Çí‰ªò„Åë„Çã
  // author.id„ÅØwebhook„ÅÆÊúÄÂàù„ÅÆÊï∞Â≠ó18Ê°Å
  if (message.author.id == process.env.DISCORD_BOT_ID01 ||
      message.author.id == process.env.DISCORD_BOT_ID02) {
    console.log(message.author.id + ":" + message.author.username);
    message.react("‚≠ï");
    message.react("‚ùå");
    message.react("‚ùì");
    message.react("üé§");
    message.react("üëÇ");
    message.react("üò≠");
    return;
  }
  
  // „É°„É≥„Ç∑„Éß„É≥„ÅßÂëº„Å∞„Çå„ÅüÊôÇ„ÅØ‰ΩøÁî®ÊñπÊ≥ï„ÇíË°®Á§∫
  if (message.isMemberMentioned(client.user)) {
    console.log(message.channel.name);
    let arr = ["„ÇìÔºüÂëº„Çì„Å†Ôºü", "„ÅØ„Éº„ÅÑ‚ô°", "...", "Ëµ∑„Åç„Å¶„Çã„Çà", "„ÅÜ„Çã„Åõ„Åá„Å™"];
    var random = Math.floor(Math.random() * arr.length);
//    var result = arr[random];
    var result = arr[random] + '\n\n„ÄêÊà¶ÈóòÂäõÂ†±ÂëäÈñ¢ÈÄ£„Äë\n !cp';
    sendReply(message, result);
    return;
  }
  //===================================
  //debugÁî®„ÉÅ„É£„É≥„Éç„É´‰ª•Â§ñ„ÅØÂá¶ÁêÜ„Åó„Å™„ÅÑ
  if (message.channel.id != process.env.DISCORD_BOT_TEST_CH) return;
  //===================================
    
  //„Ç≥„Éû„É≥„ÉâÈñ¢ÈÄ£
  if (message.content.startsWith(prefix)){
    const args = message.content.slice(prefix.length).trim().split(' ');
    const cmd = args.shift().toLowerCase();
    //Usage
    if (cmd ==='cp' && (args[0] === 'help' || args[0] === undefined) ){
      console.log('HELP');
      let text = "\n„ÄêÂ†±ÂëäÁî®„Äë!cp Êà¶ÈóòÂäõ „Ç∏„Éß„Éñ\n"
      + "„ÄÄ„ÄÄ„ÄÄ  „ÄÄ`!cp 1234567 „Éë„É©`„ÄÄ„Å®„ÅÑ„ÅÜÊÑü„Åò„ÅßÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n\n"
      + "„ÄÄ‚Äª!cp„Å®Âå∫Âàá„Çä„ÅÆ„Çπ„Éö„Éº„Çπ„ÅØÂçäËßí„Åß„ÅäÈ°ò„ÅÑ„Åó„Åæ„Åô„ÄÇ\n"
      + "„ÄÄ„ÄÄÊï∞Â≠ó„ÅØ„Ç´„É≥„Éû„ÅßÂå∫Âàá„Çâ„Å™„ÅÑ„Åß„Åè„Å†„Åï„ÅÑ„ÄÇ\n\n"
      + "„ÄÄ‚Äª‰ΩïÂ∫¶„Åß„ÇÇÂÖ•ÂäõÂèØËÉΩ„Åß„Åô„ÄÇÈñìÈÅï„Åà„Åü„ÇâÂÜçÂ∫¶ÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n"
      + "„ÄÄ„ÄÄÂæå„Åã„ÇâÂÖ•Âäõ„Åó„Åü„ÇÇ„ÅÆ„Åß‰∏äÊõ∏„Åç„Åó„Åæ„Åô„ÄÇ\n\n\n"
      + "„ÄêË®≠ÂÆöÁî®„Äë`!cp reset`ÔºöÁèæÂú®„ÅÆ„ÉÅ„É£„É≥„Éç„É´„Å´Â†±ÂëäÁî®„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ\n\n"
      + "„ÄÄ‚ÄªÈõÜË®à„Åô„Çã‰∫∫„ÅåË°å„ÅÑ„Åæ„Åô„ÅÆ„ÅßÈÄöÂ∏∏„ÅØ‰Ωø„ÅÑ„Åæ„Åõ„Çì„ÄÇ\n"
      + "„ÄÄ‚Äª„Åì„ÅÆ„Ç≥„Éû„É≥„Éâ„ÅåÂÖ•Âäõ„Åï„Çå„Çã„Å®„É°„É≥„Ç∑„Éß„É≥„ÅåË°å„Åç„Åæ„Åô„ÅÆ„ÅßÊó©„ÇÅ„Å´Â†±Âëä„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ\n";
      sendMsg(message.channel.id, text);
      return;
    }
    // reset „Éá„Éº„Çø„ÇíÂàùÊúüÂåñ„Åó„Å¶Â†±ÂëäÁî®„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏ÈÄÅ‰ø°
    if (cmd ==='cp' && args[0] === 'reset' ){
      console.log('RESET');
      let text = "@everyone" + "\nÊà¶ÈóòÂäõ„ÅÆÂ†±Âëä„Çí„ÅäÈ°ò„ÅÑ„Åó„Åæ„ÅôÔºÅ\n" 
               + "„ÄêÂÖ•ÂäõÊñπÊ≥ï„Äë!cp Êà¶ÈóòÂäõ „Ç∏„Éß„Éñ\n Ôºà‰æãÔºâ`!cp 1234567 „Éë„É©`" 
               + "\n-----------------------------------------";
      console.log("ch:" + message.channel.id);
      console.log("me:" + message.id);
      sendMsgAndLog(message.channel.id, text);
      clearAllCPData();
      return;
    }
    
    // Â†±ÂëäÊôÇ„ÅÆÂá¶ÁêÜ
    if (cmd ==='cp' && args[0] !== undefined){
      //Ë®≠ÂÆö„Éª„Éá„Éº„Çø„ÅÆË™≠„ÅøËæº„Åø
      var fs = require('fs');
      var jsonCpConfig = JSON.parse(fs.readFileSync('./config.json','utf8'));
      var result = {};
      var jsonMemData = JSON.parse(fs.readFileSync('./cpdata.json','utf8'));
      var result = {};
      //ÊäïÁ®øËÄÖ„ÅÆ„Éã„ÉÉ„ÇØ„Éç„Éº„É†ÔºàË®≠ÂÆö„Å™„Åó„ÅØÂêçÂâçÔºâ
      let nname = message.member.nickname;
      if(nname == null) {
        nname = message.author.username;
      };

      //ÊäïÁ®øËÄÖ„ÅåÊó¢„Å´Â†±ÂëäÊ∏à„Åø„ÅãÂà§ÂÆö      
      let passIndex = jsonMemData.members.findIndex(function(item){
                                     return item.id == message.author.id;
                                     });
      console.log('index:' + passIndex);
      //Ë©≤ÂΩìID„Åå„Å™„Åë„Çå„Å∞ËøΩÂä†„ÄÅ„ÅÇ„Çå„Å∞Êõ¥Êñ∞
      if (passIndex === -1) {
        let new_data = {id: message.author.id,
                        name: nname,
                        cp: args[0],
                        job: args[1]
                       };
        jsonMemData.members.push(new_data);
        console.log('newdata: ' + JSON.stringify(new_data));
      } else {
        console.log('else: ' + passIndex);
        jsonMemData.members[passIndex].name = nname;
        jsonMemData.members[passIndex].cp = args[0];
        jsonMemData.members[passIndex].job = args[1];
      }
      console.log('memdata: ' + JSON.stringify(jsonMemData))
      fs.writeFileSync('cpdata.json', JSON.stringify(jsonMemData),"utf8");
      
      //Â†±Âëä„Å´„Çà„ÇãÊäïÁ®ø„ÅØ„É°„É≥„Ç∑„Éß„É≥„Çí‰ªò„Åë„Å™„ÅÑ
      let text = "\nÊà¶ÈóòÂäõ„ÅÆÂ†±Âëä„Çí„ÅäÈ°ò„ÅÑ„Åó„Åæ„ÅôÔºÅ\n" 
         + "„ÄêÂÖ•ÂäõÊñπÊ≥ï„Äë!cp Êà¶ÈóòÂäõ „Ç∏„Éß„Éñ\n Ôºà‰æãÔºâ!cp 1234567 „Éë„É©" 
         + "\n-----------------------------------------";
      
      jsonMemData.members.forEach(function(item,index){
                  if (index !== 0){
                      text += '\n"' + item.name + '", ' + item.cp + ', "' + item.job + '"'
                      console.log('text:' + text);
                  } 
            });

      console.log(jsonCpConfig.channel, jsonCpConfig.message, JSON.stringify(jsonCpConfig));
      //ÂÖÉ„ÅÆÊäïÁ®ø„ÇíÁ∑®ÈõÜ„Åô„Çã„Éë„Çø„Éº„É≥
      //client.channels.get(jsonCpConfig.channel).fetchMessage(jsonCpConfig.message).then(message => message.edit(text));
      let oldchannel = jsonCpConfig.channel;
      let oldmessage = jsonCpConfig.message;
      //Â†±ÂëäÁµêÊûú„ÇíÊñ∞Ë¶èÊäïÁ®ø„Åô„Çã
      sendMsgAndLog(message.channel.id, text);
      
      
      //‚Äª‚ÜìÊßòÂ≠ê„Çí„Åø„Å¶ÂÆüË£Ö„Åô„Çã
      
      //Êóß„Éá„Éº„Çø„ÇíÂâäÈô§„Åô„Çã
      //client.channels.get(oldchannel).fetchMessage(oldmessage).then(message => message.delete());
      return;
  }
  
  }
  
});

if (process.env.DISCORD_BOT_TOKEN == undefined) {
  console.log("DISCORD_BOT_TOKEN„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ");
  process.exit(0);
}

client.login(process.env.DISCORD_BOT_TOKEN);

function sendReply(message, text) {
  message
    .reply(text)
    .then(console.log("„É™„Éó„É©„Ç§ÈÄÅ‰ø°: " + text))
    .catch(console.error);
}

function sendMsg(channelId, text, option = {}) {
  client.channels
    .get(channelId)
    .send(text, option)
    .then(console.log("sendMsg  CH:" + channelId + " „É°„ÉÉ„Çª„Éº„Ç∏ÈÄÅ‰ø°: " + text + JSON.stringify(option)))
    .catch(console.error);
}
async function sendMsgAndLog(channelId, text, option = {}) {
  let sent = await client.channels
    .get(channelId)
    .send(text, option)
    .then(console.log("sendMsgAndLog  CH:" + channelId + " „É°„ÉÉ„Çª„Éº„Ç∏ÈÄÅ‰ø°: " + text + JSON.stringify(option)))
    .catch(console.error);
  let id = sent.id;
  writeCPConfig(channelId, id);
}

function writeCPConfig(channelId, messageId){
  const fs = require('fs');

  let data = {
    channel: channelId,
    message: messageId
  };
  console.log('writeCPConfig:' + data);
  fs.writeFileSync('config.json', JSON.stringify(data),"utf8");
}

function clearAllCPData(){
  const fs = require('fs');
  //ÂÖ®„Éá„Éº„ÇøÂâäÈô§„ÅÆ„Åü„ÇÅ[0]„ÅØ„ÉÄ„Éü„Éº„Éá„Éº„Çø„Å®„Åô„Çã
  let data = {
    "members": [{id: "000000000000000000",
                        name: "No Name",
                        cp: 1234567,
                        job: "para"
                       }]
    };
  console.log('clearAllCPData:' + data);
  fs.writeFileSync('cpdata.json', JSON.stringify(data),"utf8");
}

function getJsonCpData(){
  
}